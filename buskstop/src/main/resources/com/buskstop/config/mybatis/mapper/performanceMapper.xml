<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.buskstop.config.mybatis.mapper.performanceMapper">

	<sql id="column-performance">
		performance_no,
		performance_name,
		performance_title,
		performance_location,
		performance_date,
		performance_content,
		performance_image,
		performance_user_id,
		performance_reg_time
	</sql>

	<!-- ResultMap 등록 -->
	<resultMap type="performance" id="performance-resultmap">
		<id column="performance_no" property="performanceNo"/>
		<result column="performance_name" property="performanceName"/>
		<result column="performance_title" property="performanceTitle"/>
		<result column="performance_location" property="performanceLocation"/>
		<result column="performance_date" property="performanceDate"/>
		<result column="performance_hits" property="performanceHits"/>
		<result column="performance_content" property="performanceContent"/>
		<result column="performance_image" property="performanceImage"/>
		<result column="performance_user_id" property="performanceUserId"/>
		<result column="performance_reg_time" property="performanceRegTime"/>
	</resultMap>
	
	<resultMap type="Performance" id="performance-join-performanceLike-resultmap" extends="performance-resultmap">
		<collection property="likeCount" ofType="PerformanceLike">
			<id property="performanceLikeNo" column="performance_like_no"/>
			<result property="performanceLikeUserId" column="performance_user_id"/>
		</collection>
	</resultMap>
	
	<!-- 공연정보 insert -->
	<insert id="insertPerformance" parameterType="Performance">
		<selectKey keyProperty="performanceNo" resultType="_int" order="BEFORE">
			select PERFORMANCE_NO_SEQ.nextval from dual
		</selectKey>
		insert into PERFORMANCE (<include refid="column-performance"/>)
		values(#{performanceNo}, #{performanceName}, #{performanceTitle}, 
		#{performanceLocation}, #{performanceDate}, #{performanceContent}, 
		#{performanceImage}, #{performanceUserId}, sysdate)
	</insert>
	

	<!-- 공연정보 리스트 조회 (뷰) select mock -->
	<update id="updatePerformance" parameterType="Performance">
		UPDATE performance
		<set>
			<if test="performanceName != null">performance_name=#{performanceName},</if>
			<if test="performanceTitle != null">performance_title=#{performanceTitle},</if>
			<if test="performanceLocation != null">performance_location=#{performanceLocation},</if>
			<if test="performanceDate != null">performance_date=#{performanceDate},</if>
			<if test="performanceContent != null">performance_content=#{performanceContent},</if>
			<if test="performanceImage != null">performance_image=#{performanceImage},</if>
			<if test="performanceUserId != null">performance_user_id = #{performanceUserId}</if>
		</set>
		WHERE performance_no=#{performanceNo}
	</update>
	
	<delete id="deletePerformanceByPerformanceNo" parameterType="int">
	delete from performance 
	where performance_no=#{performanceNo}
	</delete>

	<!-- 공연정보 전체 조회 select mock -->
	<select id="selectAllPerformance" resultMap="performance-resultmap">
		select * from performance
	</select>
	
	<!-- 공연정보 글 보기 (디테일 뷰)-->
	<select id="selectPerformanceByPerformanceNo" parameterType="_int" resultMap="performance-resultmap">
		select * from performance where performance_no = #{performanceNo}
	</select>

	<!-- 공연정보 제목으로 검색 -->
	<select id="selectPerformanceByPerformanceTitle" parameterType="String" resultMap="performance-resultmap">
		select * from performance
		where performance_title like '%'||#{performanceTitle}||'%'
	</select>
	
	<!-- 공연정보 작성자로 검색 -->
	<select id="selectPerformanceByPerformanceUserId" parameterType="String" resultMap="performance-resultmap">
		select * from performance
		where performance_user_id like '%'||#{performanceUserId}||'%'
	</select>
	
	<!-- 공연정보 공연장소로 검색 -->
	<select id="selectPerformanceByPerformanceLocation" parameterType="String" resultMap="performance-resultmap">
		select * from performance
		where performance_location like '%'||#{performanceLocation}||'%'
	</select>
	
	<!-- 공연정보 공연이름으로 검색 -->
	<select id="selectPerformanceByPerformanceName" parameterType="String" resultMap="performance-resultmap">
		select * from performance
		where performance_name like '%'||#{performanceName}||'%'
	</select>
	
	<!-- 공연정보 내용으로 검색 -->
	<select id="selectPerformanceByPerformanceContent" parameterType="String" resultMap="performance-resultmap">
		select * from performance
		where performance_content like '%'||#{performanceContent}||'%'
	</select>
	
	<!-- 공연목록을 좋아요와 함께 조회 -->
	<select id="selectAllPerformanceJoin" resultMap="performance-join-performanceLike-resultmap">
		select p.performance_no,
			p.performance_name,
			p.performance_title,
			p.performance_location,
			p.performance_date,
			p.performance_content,
			p.performance_image,
			p.performance_user_id,
			p.performance_reg_time,
			pl.likecount
		from PERFORMANCE p, (
				select performance_like_no, count(*) likecount
				from performance_like
				group by performance_like_no
		) pl
		where p.performance_no = pl.performance_like_no(+)
	</select>
</mapper>